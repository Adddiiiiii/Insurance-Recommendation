{"ast":null,"code":"/**\r\n * Recommend insurance products based on user profile\r\n * \r\n * @param {Array} insuranceProducts - Array of insurance products\r\n * @param {Object} userProfile - User profile data\r\n * @returns {Array} - Array of recommended products with details\r\n */\nexport const recommendProducts = (insuranceProducts, userProfile) => {\n  const {\n    age,\n    income,\n    financialGoal,\n    riskAppetite\n  } = userProfile;\n  const recommendedProducts = [];\n  for (const product of insuranceProducts) {\n    // Check if product matches user criteria\n    const ageMatch = product.minAge <= age && age <= product.maxAge;\n    const incomeMatch = income >= product.minIncome;\n    const goalMatch = product.suitableFor.includes(financialGoal);\n    const riskMatch = product.risk.includes(riskAppetite);\n    if (ageMatch && incomeMatch && goalMatch && riskMatch) {\n      // Calculate estimated premium\n      const monthlyPremium = Math.round(income * product.premiumFactor / 12 * 100) / 100;\n      recommendedProducts.push({\n        name: product.name,\n        description: product.description,\n        monthlyPremium,\n        annualPremium: monthlyPremium * 12,\n        taxBenefit: product.taxBenefit\n      });\n    }\n  }\n  return recommendedProducts;\n};\n\n/**\r\n * Generate personalized response based on user profile and recommendations\r\n * \r\n * @param {Object} userProfile - User profile data\r\n * @param {Array} recommendedProducts - Array of recommended products\r\n * @returns {String} - Personalized response\r\n */\nexport const generateResponse = (userProfile, recommendedProducts) => {\n  const {\n    age,\n    income,\n    financialGoal,\n    riskAppetite\n  } = userProfile;\n  if (recommendedProducts.length === 0) {\n    return \"Based on your profile, we couldn't find suitable insurance products. Please consider adjusting your preferences or consult with our financial advisors for personalized recommendations.\";\n  }\n  let productNames = recommendedProducts.map(p => p.name);\n  let productNamesText = '';\n  if (productNames.length === 1) {\n    productNamesText = productNames[0];\n  } else {\n    productNamesText = productNames.slice(0, -1).join(', ') + ' and ' + productNames[productNames.length - 1];\n  }\n  const riskDescriptions = {\n    \"Low\": \"conservative approach to financial planning\",\n    \"Medium\": \"balanced approach to risk and returns\",\n    \"High\": \"growth-oriented investment strategy\"\n  };\n  const goalDescriptions = {\n    \"Tax Saving\": \"optimize your tax liabilities\",\n    \"Wealth Creation\": \"build wealth over the long term\",\n    \"Health Security\": \"secure your health and well-being\",\n    \"Life Cover\": \"provide financial security for your loved ones\"\n  };\n  return `\n    As a ${age}-year-old with a ${riskAppetite.toLowerCase()} risk appetite (a ${riskDescriptions[riskAppetite]}) \n    and a primary goal of ${financialGoal} (looking to ${goalDescriptions[financialGoal]}), \n    we recommend ${productNamesText}.\n    \n    These products align well with your financial profile and can help you achieve your objectives \n    while staying within your risk comfort zone. The estimated premiums are based on your annual income \n    of ₹${income.toLocaleString()}.\n    \n    We suggest scheduling a consultation with a financial advisor to customize these recommendations \n    further based on your specific needs and circumstances.\n  `;\n};","map":{"version":3,"names":["recommendProducts","insuranceProducts","userProfile","age","income","financialGoal","riskAppetite","recommendedProducts","product","ageMatch","minAge","maxAge","incomeMatch","minIncome","goalMatch","suitableFor","includes","riskMatch","risk","monthlyPremium","Math","round","premiumFactor","push","name","description","annualPremium","taxBenefit","generateResponse","length","productNames","map","p","productNamesText","slice","join","riskDescriptions","goalDescriptions","toLowerCase","toLocaleString"],"sources":["C:/Users/adity/OneDrive/Documents/AI/Insurance Recommendation Agent/src/utils/recommendationUtils.js"],"sourcesContent":["/**\r\n * Recommend insurance products based on user profile\r\n * \r\n * @param {Array} insuranceProducts - Array of insurance products\r\n * @param {Object} userProfile - User profile data\r\n * @returns {Array} - Array of recommended products with details\r\n */\r\nexport const recommendProducts = (insuranceProducts, userProfile) => {\r\n  const { age, income, financialGoal, riskAppetite } = userProfile;\r\n  const recommendedProducts = [];\r\n  \r\n  for (const product of insuranceProducts) {\r\n    // Check if product matches user criteria\r\n    const ageMatch = product.minAge <= age && age <= product.maxAge;\r\n    const incomeMatch = income >= product.minIncome;\r\n    const goalMatch = product.suitableFor.includes(financialGoal);\r\n    const riskMatch = product.risk.includes(riskAppetite);\r\n    \r\n    if (ageMatch && incomeMatch && goalMatch && riskMatch) {\r\n      // Calculate estimated premium\r\n      const monthlyPremium = Math.round((income * product.premiumFactor) / 12 * 100) / 100;\r\n      \r\n      recommendedProducts.push({\r\n        name: product.name,\r\n        description: product.description,\r\n        monthlyPremium,\r\n        annualPremium: monthlyPremium * 12,\r\n        taxBenefit: product.taxBenefit\r\n      });\r\n    }\r\n  }\r\n  \r\n  return recommendedProducts;\r\n};\r\n\r\n/**\r\n * Generate personalized response based on user profile and recommendations\r\n * \r\n * @param {Object} userProfile - User profile data\r\n * @param {Array} recommendedProducts - Array of recommended products\r\n * @returns {String} - Personalized response\r\n */\r\nexport const generateResponse = (userProfile, recommendedProducts) => {\r\n  const { age, income, financialGoal, riskAppetite } = userProfile;\r\n  \r\n  if (recommendedProducts.length === 0) {\r\n    return \"Based on your profile, we couldn't find suitable insurance products. Please consider adjusting your preferences or consult with our financial advisors for personalized recommendations.\";\r\n  }\r\n  \r\n  let productNames = recommendedProducts.map(p => p.name);\r\n  let productNamesText = '';\r\n  \r\n  if (productNames.length === 1) {\r\n    productNamesText = productNames[0];\r\n  } else {\r\n    productNamesText = productNames.slice(0, -1).join(', ') + ' and ' + productNames[productNames.length - 1];\r\n  }\r\n  \r\n  const riskDescriptions = {\r\n    \"Low\": \"conservative approach to financial planning\",\r\n    \"Medium\": \"balanced approach to risk and returns\",\r\n    \"High\": \"growth-oriented investment strategy\"\r\n  };\r\n  \r\n  const goalDescriptions = {\r\n    \"Tax Saving\": \"optimize your tax liabilities\",\r\n    \"Wealth Creation\": \"build wealth over the long term\",\r\n    \"Health Security\": \"secure your health and well-being\",\r\n    \"Life Cover\": \"provide financial security for your loved ones\"\r\n  };\r\n  \r\n  return `\r\n    As a ${age}-year-old with a ${riskAppetite.toLowerCase()} risk appetite (a ${riskDescriptions[riskAppetite]}) \r\n    and a primary goal of ${financialGoal} (looking to ${goalDescriptions[financialGoal]}), \r\n    we recommend ${productNamesText}.\r\n    \r\n    These products align well with your financial profile and can help you achieve your objectives \r\n    while staying within your risk comfort zone. The estimated premiums are based on your annual income \r\n    of ₹${income.toLocaleString()}.\r\n    \r\n    We suggest scheduling a consultation with a financial advisor to customize these recommendations \r\n    further based on your specific needs and circumstances.\r\n  `;\r\n}; "],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,iBAAiB,GAAGA,CAACC,iBAAiB,EAAEC,WAAW,KAAK;EACnE,MAAM;IAAEC,GAAG;IAAEC,MAAM;IAAEC,aAAa;IAAEC;EAAa,CAAC,GAAGJ,WAAW;EAChE,MAAMK,mBAAmB,GAAG,EAAE;EAE9B,KAAK,MAAMC,OAAO,IAAIP,iBAAiB,EAAE;IACvC;IACA,MAAMQ,QAAQ,GAAGD,OAAO,CAACE,MAAM,IAAIP,GAAG,IAAIA,GAAG,IAAIK,OAAO,CAACG,MAAM;IAC/D,MAAMC,WAAW,GAAGR,MAAM,IAAII,OAAO,CAACK,SAAS;IAC/C,MAAMC,SAAS,GAAGN,OAAO,CAACO,WAAW,CAACC,QAAQ,CAACX,aAAa,CAAC;IAC7D,MAAMY,SAAS,GAAGT,OAAO,CAACU,IAAI,CAACF,QAAQ,CAACV,YAAY,CAAC;IAErD,IAAIG,QAAQ,IAAIG,WAAW,IAAIE,SAAS,IAAIG,SAAS,EAAE;MACrD;MACA,MAAME,cAAc,GAAGC,IAAI,CAACC,KAAK,CAAEjB,MAAM,GAAGI,OAAO,CAACc,aAAa,GAAI,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG;MAEpFf,mBAAmB,CAACgB,IAAI,CAAC;QACvBC,IAAI,EAAEhB,OAAO,CAACgB,IAAI;QAClBC,WAAW,EAAEjB,OAAO,CAACiB,WAAW;QAChCN,cAAc;QACdO,aAAa,EAAEP,cAAc,GAAG,EAAE;QAClCQ,UAAU,EAAEnB,OAAO,CAACmB;MACtB,CAAC,CAAC;IACJ;EACF;EAEA,OAAOpB,mBAAmB;AAC5B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMqB,gBAAgB,GAAGA,CAAC1B,WAAW,EAAEK,mBAAmB,KAAK;EACpE,MAAM;IAAEJ,GAAG;IAAEC,MAAM;IAAEC,aAAa;IAAEC;EAAa,CAAC,GAAGJ,WAAW;EAEhE,IAAIK,mBAAmB,CAACsB,MAAM,KAAK,CAAC,EAAE;IACpC,OAAO,0LAA0L;EACnM;EAEA,IAAIC,YAAY,GAAGvB,mBAAmB,CAACwB,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACR,IAAI,CAAC;EACvD,IAAIS,gBAAgB,GAAG,EAAE;EAEzB,IAAIH,YAAY,CAACD,MAAM,KAAK,CAAC,EAAE;IAC7BI,gBAAgB,GAAGH,YAAY,CAAC,CAAC,CAAC;EACpC,CAAC,MAAM;IACLG,gBAAgB,GAAGH,YAAY,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,GAAG,OAAO,GAAGL,YAAY,CAACA,YAAY,CAACD,MAAM,GAAG,CAAC,CAAC;EAC3G;EAEA,MAAMO,gBAAgB,GAAG;IACvB,KAAK,EAAE,6CAA6C;IACpD,QAAQ,EAAE,uCAAuC;IACjD,MAAM,EAAE;EACV,CAAC;EAED,MAAMC,gBAAgB,GAAG;IACvB,YAAY,EAAE,+BAA+B;IAC7C,iBAAiB,EAAE,iCAAiC;IACpD,iBAAiB,EAAE,mCAAmC;IACtD,YAAY,EAAE;EAChB,CAAC;EAED,OAAO;AACT,WAAWlC,GAAG,oBAAoBG,YAAY,CAACgC,WAAW,CAAC,CAAC,qBAAqBF,gBAAgB,CAAC9B,YAAY,CAAC;AAC/G,4BAA4BD,aAAa,gBAAgBgC,gBAAgB,CAAChC,aAAa,CAAC;AACxF,mBAAmB4B,gBAAgB;AACnC;AACA;AACA;AACA,UAAU7B,MAAM,CAACmC,cAAc,CAAC,CAAC;AACjC;AACA;AACA;AACA,GAAG;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}